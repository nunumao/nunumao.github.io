{"meta":{"title":"努努猫","subtitle":"书上得来终觉浅，绝知此事要躬行","description":"","author":"Nunumao","url":"https://www.nunumao.cc","root":"/"},"pages":[],"posts":[{"title":"Netty (一) | 基础案例","slug":"Netty-一-基础案例","date":"2024-03-30T13:06:22.000Z","updated":"2024-04-03T02:03:00.915Z","comments":true,"path":"learn/java/c608c29823b6/","permalink":"https://www.nunumao.cc/learn/java/c608c29823b6/","excerpt":"","text":"服务端123456789101112131415161718192021public static void main(String[] args) &#123; // 服务端使用 ServerBootstrap new ServerBootstrap() // 第一个 loop 负责处理连接建立 第二个 loop 负责事件循环 .group(new NioEventLoopGroup(), new NioEventLoopGroup()) .channel(NioServerSocketChannel.class) .childHandler(new ChannelInitializer&lt;NioSocketChannel&gt;() &#123; @Override protected void initChannel(NioSocketChannel ch) throws Exception &#123; // 向 pipeline 里面添加处理程序 ch.pipeline() .addLast(new StringDecoder()) .addLast(new ChannelInboundHandlerAdapter() &#123; @Override public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception &#123; log.info(&quot;&#123;&#125;&quot;, msg); &#125; &#125;); &#125; &#125;).bind(19000);&#125; 客户端123456789101112131415public static void main(String[] args) throws InterruptedException &#123; new Bootstrap() .group(new NioEventLoopGroup()) .channel(NioSocketChannel.class) .handler(new ChannelInitializer&lt;NioSocketChannel&gt;() &#123; @Override protected void initChannel(NioSocketChannel ch) throws Exception &#123; ch.pipeline().addLast(new StringEncoder()); &#125; &#125;) .connect(&quot;localhost&quot;,19000) .sync() .channel() .writeAndFlush(&quot;123&quot;);&#125;","categories":[{"name":"learn","slug":"learn","permalink":"https://www.nunumao.cc/categories/learn/"},{"name":"java","slug":"learn/java","permalink":"https://www.nunumao.cc/categories/learn/java/"}],"tags":[{"name":"Netty","slug":"Netty","permalink":"https://www.nunumao.cc/tags/Netty/"}]},{"title":"STM32概述","slug":"STM32概述","date":"2024-03-30T09:30:36.000Z","updated":"2024-04-03T02:03:00.915Z","comments":true,"path":"learn/iot/9def17ecae68/","permalink":"https://www.nunumao.cc/learn/iot/9def17ecae68/","excerpt":"","text":"STM32介绍STM32 是意法半导体（STMicroelectronics）推出的一系列基于ARM Cortex-M3内核使用精简指令集的32位微控制器（MCU）。ST指意法半导体，M指微处理器，32表示计算机处理的位数。ARM Cortex有三个系列，A针对多媒体应用，R针对实时性和性能有一定要求场景，M针对低功耗高性能场景。因此STM32具有低功耗、高性能、丰富的外设接口等特点。 STM32芯片系列命名方式 STM32微控制器内部结构 STM32最小系统组成 供电系统 时钟电路（内部时钟源、外部时钟源） 复位电路 下载接口电路 boot电路","categories":[{"name":"learn","slug":"learn","permalink":"https://www.nunumao.cc/categories/learn/"},{"name":"iot","slug":"learn/iot","permalink":"https://www.nunumao.cc/categories/learn/iot/"}],"tags":[{"name":"STM32","slug":"STM32","permalink":"https://www.nunumao.cc/tags/STM32/"}]},{"title":"Alpine Minio","slug":"AlpineMinio","date":"2024-03-30T09:04:50.000Z","updated":"2024-04-03T02:03:00.914Z","comments":true,"path":"learn/docker/89ad02f01c1d/","permalink":"https://www.nunumao.cc/learn/docker/89ad02f01c1d/","excerpt":"","text":"Dockerfile12345678910111213141516171819FROM nunumaomao/alpine:latestWORKDIR /homeADD docker-run.sh ./RUN apk add --no-cache wget &amp;&amp; \\ CURRENT_ARCH=`arch` &amp;&amp; echo $CURRENT_ARCH &amp;&amp; \\ wget https://oss.nunumao.cc/test/$&#123;CURRENT_ARCH&#125;/minioRUN chmod +x docker-run.sh &amp;&amp; chmod +x minioEXPOSE 9000 9001ENV MINIO_USER=root MINIO_PASSWORD=12345678VOLUME /mnt/dataENTRYPOINT [&quot;./docker-run.sh&quot;] docker-run.sh123456#!/bin/ashexport MINIO_ROOT_USER=$&#123;MINIO_USER&#125;export MINIO_ROOT_PASSWORD=$&#123;MINIO_PASSWORD&#125;./minio server /mnt/data --console-address &quot;:9001&quot; docker1docker run -d --restart=always --name minio -e MINIO_USER=root -e MINIO_PASSWORD=abcdefghijk -p 9000:9000 -p 9001:9001 -v /data/minio:/mnt/data nunumaomao/minio:latest","categories":[{"name":"learn","slug":"learn","permalink":"https://www.nunumao.cc/categories/learn/"},{"name":"docker","slug":"learn/docker","permalink":"https://www.nunumao.cc/categories/learn/docker/"}],"tags":[{"name":"alpine","slug":"alpine","permalink":"https://www.nunumao.cc/tags/alpine/"}]},{"title":"Alpine 基础镜像","slug":"Alpine基础镜像","date":"2024-03-29T15:50:53.000Z","updated":"2024-04-03T02:03:00.914Z","comments":true,"path":"learn/docker/418f3414c1de/","permalink":"https://www.nunumao.cc/learn/docker/418f3414c1de/","excerpt":"","text":"Dockerfile12345678FROM alpine:3.19.1RUN sed -i &#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27; /etc/apk/repositories &amp;&amp; \\ apk add --no-cache openrc tzdata &amp;&amp; \\ cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\ echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone &amp;&amp; \\ apk del tzdata &amp;&amp; \\ rm -rf /var/cache/apk/* 构建1docker buildx build --push --platform linux/amd64,linux/arm64 -t nunumaomao/alpine .","categories":[{"name":"learn","slug":"learn","permalink":"https://www.nunumao.cc/categories/learn/"},{"name":"docker","slug":"learn/docker","permalink":"https://www.nunumao.cc/categories/learn/docker/"}],"tags":[{"name":"alpine","slug":"alpine","permalink":"https://www.nunumao.cc/tags/alpine/"}]}],"categories":[{"name":"learn","slug":"learn","permalink":"https://www.nunumao.cc/categories/learn/"},{"name":"java","slug":"learn/java","permalink":"https://www.nunumao.cc/categories/learn/java/"},{"name":"iot","slug":"learn/iot","permalink":"https://www.nunumao.cc/categories/learn/iot/"},{"name":"docker","slug":"learn/docker","permalink":"https://www.nunumao.cc/categories/learn/docker/"}],"tags":[{"name":"Netty","slug":"Netty","permalink":"https://www.nunumao.cc/tags/Netty/"},{"name":"STM32","slug":"STM32","permalink":"https://www.nunumao.cc/tags/STM32/"},{"name":"alpine","slug":"alpine","permalink":"https://www.nunumao.cc/tags/alpine/"}]}